
;; turtle procedure; calculate the present payoffs for each behavior
to calculate-payoffs
  let w 0.5
  let extra 0
  let beta 0.9
  if switching-cost? [
    set extra benefit-of-inertia
  ]
  
  foreach behav-id-list [
    ifelse global-influence? [
      ifelse array:item positive-global-effect? ? [
        ; There we are actually giving heigher value to local signal than the gobal influence
        ;array:set payoffs ? array:item utilities ? * ( beta * (1 + array:item weight-sums ?) + (1 - beta) * ( 1 + array:item global-population ?)) 
        array:set payoffs ? array:item utilities ? * ( beta * array:item active-neighbors ? + (1 - beta) * (array:item active-counts ? - array:item active-neighbors ?)) 
      ][
      ; There we are actually giving heigher value to local signal than the gobal influence
      ; array:set payoffs ? array:item utilities ? * ( beta * (1 + array:item weight-sums ?) + (1 - beta) * ( 1 - array:item global-population ?)) 
      array:set payoffs ? array:item utilities ? * ( beta * array:item active-neighbors ? - (1 - beta) * (array:item active-counts ? - array:item active-neighbors ?)) 
      ]
    ][
    ;array:set payoffs ? w * (array:item utilities ? + extra) + (1 - w) * (array:item total-influence ?)
    array:set payoffs ? array:item utilities ? * ( beta * array:item active-neighbors ?) 
    ]
    
  ]
end




