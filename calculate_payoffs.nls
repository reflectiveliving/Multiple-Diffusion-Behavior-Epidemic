
;; turtle procedure; calculate the present payoffs for each behavior
to calculate-payoffs
  let w 0.5
  let extra 0
  if switching-cost? [
    set extra benefit-of-inertia
  ]
  
  foreach behav-id-list [
   ;; if preferences-per-behav switch is on then includde preferences
    ifelse global-influence  [
      set w 0.33
      array:set payoffs ?  w * (array:item utilities ? + extra) + w * (array:item weight-sums ?) + w * (array:item global-population ? ) ;; preference factor is added 
    ][
    set w 0.5
    let payoff-temp w * (array:item utilities ? + extra) + w * (array:item weight-sums ?)
    array:set payoffs ?  payoff-temp
    ]
  ]
end


;; turtle procedure; calculate the present weightsum for each behavior
to update-weight-sums-global-influence 
  let w n-values 2 [1]
  if global-influence [
    ask turtles [
      foreach behav-id-list [
        ifelse array:item positive-global-effect? ? [
          set w replace-item 1 w (array:item weight-sums ? + array:item global-population ?)
          array:set weight-sums ? min w
        ][
        set w replace-item 0 w 0
        set w replace-item 1 w (array:item weight-sums ? - array:item global-population ?)
        array:set weight-sums ? max w
        ]
      ]
    ]
  ]
end


