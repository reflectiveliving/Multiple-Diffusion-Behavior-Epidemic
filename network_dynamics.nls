
;;;;;;;;;;;;;;;;;;;;;SIvRS Model;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; turtel procedure
to after-adoption-SIvRS [b-id]
  array:set state b-id "V"
end

;; turtle procedure
to new-consider-SIvRS 
  foreach behav-id-list [
    array:set consider? ? ((array:item consider? ?) or (array:item actives? ?))
  ]
end

;;turtle procedure
to update-turtle-attr-SIvRS
  foreach behav-id-list [
    ifelse array:item state ? = "V" [
      ifelse array:item remaining-infected-duration ? = 0 [
        array:set state ? "R"
        array:set actives? ? false
        array:set remaining-recovered-duration ? (array:item recovered-durations ?)
      ]
      [
        array:set remaining-infected-duration ? (array:item remaining-infected-duration ? - 1)
      ]
    ]
    [
      if array:item state ? = "R" [
        ifelse array:item remaining-recovered-duration ? = 0 [
          array:set state ? "S"
        ]
        [
          array:set remaining-recovered-duration ? (array:item remaining-recovered-duration ?) - 1
        ]
      ]
    ]
  ]
end

;;;;;;;;;;;;;;;;;;;;;SIRS Model;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; turtel procedure
to after-adoption-SIRS [b-id]
  array:set state b-id "I"
  array:set remaining-infected-duration b-id (array:item infected-durations b-id)
  set remaining-resource remaining-resource - (array:item costs b-id)
end

;; turtle procedure
to new-consider-SIRS 
  foreach behav-id-list [
    array:set consider? ? ((array:item consider? ?) and (array:item state ? = "S"))
  ]
end

;;turtle procedure
to update-turtle-attr-SIRS
  foreach behav-id-list [
    ifelse array:item state ? = "I" [
      ifelse array:item remaining-infected-duration ? = 0 [
        array:set state ? "R"
        array:set actives? ? false
        array:set remaining-recovered-duration ? (array:item recovered-durations ?)
        set remaining-resource remaining-resource + (array:item costs ?)
      ]
      [
        array:set remaining-infected-duration ? (array:item remaining-infected-duration ? - 1)
      ]
    ]
    [
      if array:item state ? = "R" [
        ifelse array:item remaining-recovered-duration ? = 0 [
          array:set state ? "S"
        ]
        [
          array:set remaining-recovered-duration ? (array:item remaining-recovered-duration ?) - 1
        ]
      ]
    ]
  ]
end

;;;;;;;;;;;;;;;;;;;;;SIR Model;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; turtel procedure
to after-adoption-SIR [b-id]
  array:set state b-id "I"
  array:set actives? b-id true
  array:set remaining-infected-duration b-id (array:item infected-durations b-id)
  set remaining-resource remaining-resource - (array:item costs b-id)
end

;; turtle procedure
to new-consider-SIR 
  foreach behav-id-list [
    array:set consider? ? ((array:item consider? ?) and (array:item state ? = "S"))
  ]
end

;;turtle procedure
to update-turtle-attr-SIR
  foreach behav-id-list [
    if array:item state ? = "I" [
      ifelse array:item remaining-infected-duration ? = 0 [
        array:set state ? "R"
        array:set actives? ? false
        set remaining-resource remaining-resource + (array:item costs ?)
      ]
      [
        array:set remaining-infected-duration ? (array:item remaining-infected-duration ? - 1)
      ]
    ]
  ]
end



;;;;;;;;;;;;;;;;;;;;;Sticky Behavior SIVS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    
;; V (Velnerable) denotes the state where a behavior has crossed its mandatory infection period, but it
;; will be considered for knap-sack for the next time step

;; turtel procedure
to after-adoption-sticky [b-id]
  array:set state b-id "I"
  array:set remaining-infected-duration b-id (array:item infected-durations b-id)
  set remaining-resource remaining-resource - (array:item costs b-id)
end

;; turtle procedure
to new-consider-sticky 
  foreach behav-id-list [
    array:set consider? ? ((array:item consider? ?) and (array:item state ? = "S")) or (not (array:item state ? = "V"))
  ]
end

;;turtle procedure
to update-turtle-attr-sticky
    foreach behav-id-list [
    if array:item state ? = "I" [
      ifelse array:item remaining-infected-duration ? = 0 [
        array:set state ? "V"
        set remaining-resource remaining-resource + (array:item costs ?)
      ]
      [
        array:set remaining-infected-duration ? (array:item remaining-infected-duration ? - 1)
      ]
    ]
  ]
end

;;;;;;;;;;;;;;;;;;;;;None SVS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    
;; V (Velnerable) denotes the state where a behavior has crossed its mandatory infection period, but it
;; will be considered for knap-sack for the next time step

;; turtel procedure
to after-adoption-none [b-id]
  array:set state b-id "V"
end

;; turtle procedure
to new-consider-none 
  foreach behav-id-list [
    array:set consider? ? ((array:item consider? ?) or (array:item actives? ?))
  ]
end

;;turtle procedure
to update-turtle-attr-none
end
  
  
  
  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; turtle procedure to update thresholds
to update-threshold
  ask turtles[
    if threshold-varying? [
      foreach behav-id-list [
           let temp-threshold 0
          let stable-threshold (array:item thresholds-backup ? - 0.06)
          set temp-threshold  (0.06 * exp ( 0 - (10 * array:item global-population ?) ) + stable-threshold )
        ifelse array:item positive-global-effect? ? [          
          array:set thresholds ? temp-threshold
        ]
        [
          array:set thresholds ? (1 - temp-threshold)
        ]
      ]   
    ]
  ]

end 

;; turtle procedure to update costs
to update-costs
    if cost-varying? [
      foreach behav-id-list [
          let stable-cost (array:item costs ? - 0.1)
          let temp-costs  ( exp ( 0 - (0.25 * array:item global-population ?) )  )
          ifelse temp-costs < 0.05 [
            array:set costs ? 0.05
          ][
          array:set costs ? temp-costs
          ]
      ]   
    ]
end 